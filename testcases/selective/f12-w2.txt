 
//agents: a,b,c
//fluents: secret, ar1, ar2, ar3, ar4, br1, br2, br3, br4, cr1, cr2, cr3, cr4

PROPS : {secret, ar1, ar2, ar3, ar4, br1, br2, br3, br4, cr1, cr2, cr3, cr4} .

AGENTS : {a, b, c, d} .

MODEL : { NODES = {(1,{secret, -ar1, -ar2, ar3, -ar4, br1, -br2, -br3, -br4, -cr1, cr2, -cr3, -cr4}), (2,{-secret, -ar1, -ar2, ar3, -ar4, br1, -br2, -br3, -br4, -cr1, cr2, -cr3, -cr4})} ,  
EDGES = {(a,{1=(1,1),2=(1,2),3=(2,1),4=(2,2)}),(b,{1=(1,1),2=(2,2)}),(c,{1=(1,1),2=(1,2),3=(2,1),4=(2,2)}), (d,{1=(1,1),2=(1,2),3=(2,1),4=(2,2)})} , 
DES = {1}} .

ACTIONS : {

CAPABILITY = (( b_sense_sec = { EVENTS = { 1 = ( PRE =  (NOT (B [a] (secret)) AND (asr AND secret)), POST = {nil} ) , 2 = ( PRE = (top) , POST = {nil} )  }, EDGES = {(a,{ 1 = (1,1), 2 = (2,2)}),(b,{ 1 = (1,2), 2 = (2,2)}), (c,{ 1 = (1,2), 2 = (2,2)}), (d,{ 1 = (1,2), 2 = (2,2)})}, DES = {1} }), b, b_finds_that_the_secret_is_true_and_for_others_nothing_happened),

CAPABILITY = (( b_mov_left = { EVENTS = { 1 = ( PRE = (ar2)  , POST = {ar1, -ar2} ), 2 = ( PRE =  (ar1), POST = {asr, -ar1} ), 3 = ( PRE = (asr) , POST = {ar2, -asr} )}, EDGES ={(a,{1=(1,1),2=(2,2),3=(3,3)}), (b,{1=(1,1),2=(2,2),3=(3,3)}), (c,{1=(1,1),2=(2,2),3=(3,3)}), (d,{1=(1,1),2=(2,2),3=(3,3)}) }, DES = {1,2,3} }), b, b_moves_left),

CAPABILITY = (( a_mov_right = { EVENTS = { 1 = ( PRE = (ar2)  , POST = {asr, -ar2} ), 2 = ( PRE =  (asr), POST = {ar1, -asr} ), 3 = ( PRE = (ar1) , POST = {ar2, -ar1} )}, EDGES ={(a,{1=(1,1),2=(2,2),3=(3,3)}), (b,{1=(1,1),2=(2,2),3=(3,3)}), (c,{1=(1,1),2=(2,2),3=(3,3)}), (d,{1=(1,1),2=(2,2),3=(3,3)}) }, DES = {1,2,3} }), b, b_moves_right),

CAPABILITY = (( b_announce_secret = { EVENTS = { 
1 = ( PRE = (B [a] (secret) AND (NOT (B [b] (secret))) AND ( (ar1 AND br1 AND -cr1 AND -cr2) OR (ar2 AND br2 AND -cr1 AND -cr2 AND -cr3) OR (ar3 AND br3 AND -cr2 AND -cr3 AND -cr4) OR (ar4 AND br4 AND -cr3 AND -cr4) ))  , POST = {nil} ), 
2 = ( PRE = (secret AND (NOT (B [b] (secret))) AND asr AND bsr AND (NOT (csr OR cr3 OR dsr OR dr3))  , POST = {nil} ), 
3 = ( PRE =  (asr AND bsr AND (NOT (csr OR cr3 OR dsr OR dr3)), POST = {nil} ), 

4 = ( PRE = (B [a] (secret) AND (NOT (B [b] (secret))) AND ar1 AND br1 AND (NOT (cr1 OR cr2 OR dr1 OR dr2)))  , POST = {nil} ), 
5 = ( PRE = (secret AND (NOT (B [b] (secret))) AND ar1 AND br1 AND (NOT (cr1 OR cr2 OR dr1 OR dr2)))  , POST = {nil} ), 
6 = ( PRE =  (ar1 AND br1 AND (NOT (cr1 OR cr2 OR dr1 OR dr2))), POST = {nil} ), 

7 = ( PRE = (B [a] (secret) AND (NOT (B [b] (secret))) AND ar2 AND br2 AND (NOT (cr1 OR cr2 OR cr3 OR dr1 OR dr2 OR dr3)))  , POST = {nil} ), 
8 = ( PRE = (secret AND (NOT (B [b] (secret))) AND ar2 AND br2)  , POST = {nil} ), 
9 = ( PRE =  (ar2 AND br2), POST = {nil} ),

10 = ( PRE =  (ar2 AND br2), POST = {nil} ),
11 = ( PRE =  (ar2 AND br2), POST = {nil} ),
12 = ( PRE =  (ar2 AND br2), POST = {nil} ),

13 = ( PRE =  (ar2 AND br2), POST = {nil} ),
14 = ( PRE =  (ar2 AND br2), POST = {nil} ),
15 = ( PRE =  (ar2 AND br2), POST = {nil} ),

16 = ( PRE =  (ar2 AND br2), POST = {nil} ),
17 = ( PRE =  (ar2 AND br2), POST = {nil} ),
18 = ( PRE =  (ar2 AND br2), POST = {nil} ),

19 = ( PRE =  (ar2 AND br2), POST = {nil} ),
20 = ( PRE =  (ar2 AND br2), POST = {nil} ),
21 = ( PRE =  (ar2 AND br2), POST = {nil} ),
}, 
EDGES ={(a,{1=(1,1),2=(2,2),3=(3,3),4=(4,4),5=(5,5),6=(6,6),7=(7,7),8=(8,8),9=(9,9)}), (b,{1=(1,2),2=(2,2),3=(3,3),4=(4,5),5=(5,5),6=(6,6),7=(7,8),8=(8,8),9=(9,9)}), (c,{1=(1,3),2=(2,3),3=(3,3),4=(4,6),5=(5,6),6=(6,6),7=(7,9),8=(8,9),9=(9,9)}), (d,{1=(1,3),2=(2,3),3=(3,3),4=(4,6),5=(5,6),6=(6,6),7=(7,9),8=(8,9),9=(9,9)})}, 
DES = {1,4,7} }), b, b_announces_secret),

}.

GOAL : ( B[b] (B [a] (secret) AND (NOT (B [c] (secret))))).

PLANNER : {b} .
